<?xml version="1.0" encoding="UTF-8" ?>
<class name="SpriteBase3D" inherits="GeometryInstance" category="Core" version="3.1.1">
	<brief_description>
		2D Sprite node in 3D environment.
	</brief_description>
	<description>
		A node that displays 2D texture information in a 3D environment.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="generate_triangle_mesh" qualifiers="const">
			<return type="TriangleMesh">
			</return>
			<description>
			</description>
		</method>
		<method name="get_item_rect" qualifiers="const">
			<return type="Rect2">
			</return>
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="alpha_cut" type="int" setter="set_alpha_cut_mode" getter="get_alpha_cut_mode" enum="SpriteBase3D.AlphaCutMode">
		</member>
		<member name="axis" type="int" setter="set_axis" getter="get_axis" enum="Vector3.Axis">
			The direction in which the front of the texture faces.
		</member>
		<member name="centered" type="bool" setter="set_centered" getter="is_centered">
			If [code]true[/code], texture will be centered. Default value: [code]true[/code].
		</member>
		<member name="double_sided" type="bool" setter="set_draw_flag" getter="get_draw_flag">
			If [code]true[/code], texture can be seen from the back as well, if [code]false[/code], it is invisible when looking at it from behind. Default value: [code]true[/code].
		</member>
		<member name="flip_h" type="bool" setter="set_flip_h" getter="is_flipped_h">
			If [code]true[/code], texture is flipped horizontally. Default value: [code]false[/code].
		</member>
		<member name="flip_v" type="bool" setter="set_flip_v" getter="is_flipped_v">
			If [code]true[/code], texture is flipped vertically. Default value: [code]false[/code].
		</member>
		<member name="modulate" type="Color" setter="set_modulate" getter="get_modulate">
			A color value that gets multiplied on, could be used for mood-coloring or to simulate the color of light.
		</member>
		<member name="offset" type="Vector2" setter="set_offset" getter="get_offset">
			The texture's drawing offset.
		</member>
		<member name="opacity" type="float" setter="set_opacity" getter="get_opacity">
			The objects visibility on a scale from [code]0[/code] fully invisible to [code]1[/code] fully visible.
		</member>
		<member name="pixel_size" type="float" setter="set_pixel_size" getter="get_pixel_size">
			The size of one pixel's width on the Sprite to scale it in 3D.
		</member>
		<member name="shaded" type="bool" setter="set_draw_flag" getter="get_draw_flag">
			If [code]true[/code], the [Light] in the [Environment] has effects on the Sprite. Default value: [code]false[/code].
		</member>
		<member name="transparent" type="bool" setter="set_draw_flag" getter="get_draw_flag">
			If [code]true[/code], the texture's transparency and the opacity are used to make those parts of the Sprite invisible. Default value: [code]true[/code].
		</member>
	</members>
	<constants>
		<constant name="FLAG_TRANSPARENT" value="0" enum="DrawFlags">
			If set, the texture's transparency and the opacity are used to make those parts of the Sprite invisible.
		</constant>
		<constant name="FLAG_SHADED" value="1" enum="DrawFlags">
			If set, the Light in the Environment has effects on the Sprite.
		</constant>
		<constant name="FLAG_DOUBLE_SIDED" value="2" enum="DrawFlags">
			If set, texture can be seen from the back as well, if not, it is invisible when looking at it from behind.
		</constant>
		<constant name="FLAG_MAX" value="3" enum="DrawFlags">
			Used internally to mark the end of the Flags section.
		</constant>
		<constant name="ALPHA_CUT_DISABLED" value="0" enum="AlphaCutMode">
		</constant>
		<constant name="ALPHA_CUT_DISCARD" value="1" enum="AlphaCutMode">
		</constant>
		<constant name="ALPHA_CUT_OPAQUE_PREPASS" value="2" enum="AlphaCutMode">
		</constant>
	</constants>
</class>
