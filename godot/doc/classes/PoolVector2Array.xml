<?xml version="1.0" encoding="UTF-8" ?>
<class name="PoolVector2Array" category="Built-In Types" version="3.1.1">
	<brief_description>
		A pooled [Array] of [Vector2].
	</brief_description>
	<description>
		An [Array] specifically designed to hold [Vector2]. Optimized for memory usage, does not fragment the memory. Note that this type is passed by value and not by reference.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="PoolVector2Array">
			<return type="PoolVector2Array">
			</return>
			<argument index="0" name="from" type="Array">
			</argument>
			<description>
				Construct a new [code]PoolVector2Array[/code]. Optionally, you can pass in a generic [Array] that will be converted.
			</description>
		</method>
		<method name="append">
			<argument index="0" name="vector2" type="Vector2">
			</argument>
			<description>
				Append an element at the end of the array (alias of [method push_back]).
			</description>
		</method>
		<method name="append_array">
			<argument index="0" name="array" type="PoolVector2Array">
			</argument>
			<description>
				Append a [code]PoolVector2Array[/code] at the end of this array.
			</description>
		</method>
		<method name="insert">
			<return type="int">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="vector2" type="Vector2">
			</argument>
			<description>
				Insert a new element at a given position in the array. The position must be valid, or at the end of the array ([code]idx == size()[/code]).
			</description>
		</method>
		<method name="invert">
			<description>
				Reverse the order of the elements in the array.
			</description>
		</method>
		<method name="push_back">
			<argument index="0" name="vector2" type="Vector2">
			</argument>
			<description>
				Insert a [Vector2] at the end.
			</description>
		</method>
		<method name="remove">
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Remove an element from the array by index.
			</description>
		</method>
		<method name="resize">
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Set the size of the array. If the array is grown reserve elements at the end of the array. If the array is shrunk truncate the array to the new size.
			</description>
		</method>
		<method name="set">
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="vector2" type="Vector2">
			</argument>
			<description>
				Change the [Vector2] at the given index.
			</description>
		</method>
		<method name="size">
			<return type="int">
			</return>
			<description>
				Return the size of the array.
			</description>
		</method>
	</methods>
	<constants>
	</constants>
</class>
