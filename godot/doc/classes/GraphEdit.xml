<?xml version="1.0" encoding="UTF-8" ?>
<class name="GraphEdit" inherits="Control" category="Core" version="3.1.1">
	<brief_description>
		GraphEdit is an area capable of showing various GraphNodes. It manages connection events between them.
	</brief_description>
	<description>
		GraphEdit manages the showing of GraphNodes it contains, as well as connections and disconnections between them. Signals are sent for each of these two events. Disconnection between GraphNodes slots is disabled by default.
		It is greatly advised to enable low processor usage mode (see [member OS.low_processor_usage_mode]) when using GraphEdits.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="add_valid_connection_type">
			<return type="void">
			</return>
			<argument index="0" name="from_type" type="int">
			</argument>
			<argument index="1" name="to_type" type="int">
			</argument>
			<description>
				Makes possible the connection between two different slot types. The type is defined with the [method GraphNode.set_slot] method.
			</description>
		</method>
		<method name="add_valid_left_disconnect_type">
			<return type="void">
			</return>
			<argument index="0" name="type" type="int">
			</argument>
			<description>
				Makes possible to disconnect nodes when dragging from the slot at the left if it has the specified type.
			</description>
		</method>
		<method name="add_valid_right_disconnect_type">
			<return type="void">
			</return>
			<argument index="0" name="type" type="int">
			</argument>
			<description>
				Makes possible to disconnect nodes when dragging from the slot at the right if it has the specified type.
			</description>
		</method>
		<method name="clear_connections">
			<return type="void">
			</return>
			<description>
				Remove all connections between nodes.
			</description>
		</method>
		<method name="connect_node">
			<return type="int" enum="Error">
			</return>
			<argument index="0" name="from" type="String">
			</argument>
			<argument index="1" name="from_port" type="int">
			</argument>
			<argument index="2" name="to" type="String">
			</argument>
			<argument index="3" name="to_port" type="int">
			</argument>
			<description>
				Create a connection between 'from_port' slot of 'from' GraphNode and 'to_port' slot of 'to' GraphNode. If the connection already exists, no connection is created.
			</description>
		</method>
		<method name="disconnect_node">
			<return type="void">
			</return>
			<argument index="0" name="from" type="String">
			</argument>
			<argument index="1" name="from_port" type="int">
			</argument>
			<argument index="2" name="to" type="String">
			</argument>
			<argument index="3" name="to_port" type="int">
			</argument>
			<description>
				Remove the connection between 'from_port' slot of 'from' GraphNode and 'to_port' slot of 'to' GraphNode, if connection exists.
			</description>
		</method>
		<method name="get_connection_list" qualifiers="const">
			<return type="Array">
			</return>
			<description>
				Return an Array containing the list of connections. A connection consists in a structure of the form {from_port: 0, from: "GraphNode name 0", to_port: 1, to: "GraphNode name 1" }
			</description>
		</method>
		<method name="get_zoom_hbox">
			<return type="HBoxContainer">
			</return>
			<description>
			</description>
		</method>
		<method name="is_node_connected">
			<return type="bool">
			</return>
			<argument index="0" name="from" type="String">
			</argument>
			<argument index="1" name="from_port" type="int">
			</argument>
			<argument index="2" name="to" type="String">
			</argument>
			<argument index="3" name="to_port" type="int">
			</argument>
			<description>
				Return true if the 'from_port' slot of 'from' GraphNode is connected to the 'to_port' slot of 'to' GraphNode.
			</description>
		</method>
		<method name="is_valid_connection_type" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="from_type" type="int">
			</argument>
			<argument index="1" name="to_type" type="int">
			</argument>
			<description>
				Returns whether it's possible to connect slots of the specified types.
			</description>
		</method>
		<method name="remove_valid_connection_type">
			<return type="void">
			</return>
			<argument index="0" name="from_type" type="int">
			</argument>
			<argument index="1" name="to_type" type="int">
			</argument>
			<description>
				Makes it not possible to connect between two different slot types. The type is defined with the [method GraphNode.set_slot] method.
			</description>
		</method>
		<method name="remove_valid_left_disconnect_type">
			<return type="void">
			</return>
			<argument index="0" name="type" type="int">
			</argument>
			<description>
				Removes the possibility to disconnect nodes when dragging from the slot at the left if it has the specified type.
			</description>
		</method>
		<method name="remove_valid_right_disconnect_type">
			<return type="void">
			</return>
			<argument index="0" name="type" type="int">
			</argument>
			<description>
				Removes the possibility to disconnect nodes when dragging from the slot at the right if it has the specified type.
			</description>
		</method>
		<method name="set_connection_activity">
			<return type="void">
			</return>
			<argument index="0" name="from" type="String">
			</argument>
			<argument index="1" name="from_port" type="int">
			</argument>
			<argument index="2" name="to" type="String">
			</argument>
			<argument index="3" name="to_port" type="int">
			</argument>
			<argument index="4" name="amount" type="float">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_selected">
			<return type="void">
			</return>
			<argument index="0" name="node" type="Node">
			</argument>
			<description>
				Sets the specified [code]node[/code] as the one selected.
			</description>
		</method>
	</methods>
	<members>
		<member name="right_disconnects" type="bool" setter="set_right_disconnects" getter="is_right_disconnects_enabled">
			If [code]true[/code], enables disconnection of existing connections in the GraphEdit by dragging the right end.
		</member>
		<member name="scroll_offset" type="Vector2" setter="set_scroll_ofs" getter="get_scroll_ofs">
			The scroll offset.
		</member>
		<member name="snap_distance" type="int" setter="set_snap" getter="get_snap">
			The snapping distance in pixels.
		</member>
		<member name="use_snap" type="bool" setter="set_use_snap" getter="is_using_snap">
			If [code]true[/code], enables snapping.
		</member>
		<member name="zoom" type="float" setter="set_zoom" getter="get_zoom">
			The current zoom value.
		</member>
	</members>
	<signals>
		<signal name="_begin_node_move">
			<description>
				Signal sent at the beginning of a GraphNode movement.
			</description>
		</signal>
		<signal name="_end_node_move">
			<description>
				Signal sent at the end of a GraphNode movement.
			</description>
		</signal>
		<signal name="connection_request">
			<argument index="0" name="from" type="String">
			</argument>
			<argument index="1" name="from_slot" type="int">
			</argument>
			<argument index="2" name="to" type="String">
			</argument>
			<argument index="3" name="to_slot" type="int">
			</argument>
			<description>
				Signal sent to the GraphEdit when the connection between 'from_slot' slot of 'from' GraphNode and 'to_slot' slot of 'to' GraphNode is attempted to be created.
			</description>
		</signal>
		<signal name="connection_to_empty">
			<argument index="0" name="from" type="String">
			</argument>
			<argument index="1" name="from_slot" type="int">
			</argument>
			<argument index="2" name="release_position" type="Vector2">
			</argument>
			<description>
			</description>
		</signal>
		<signal name="delete_nodes_request">
			<description>
				Signal sent when a GraphNode is attempted to be removed from the GraphEdit.
			</description>
		</signal>
		<signal name="disconnection_request">
			<argument index="0" name="from" type="String">
			</argument>
			<argument index="1" name="from_slot" type="int">
			</argument>
			<argument index="2" name="to" type="String">
			</argument>
			<argument index="3" name="to_slot" type="int">
			</argument>
			<description>
				Signal sent to the GraphEdit when the connection between 'from_slot' slot of 'from' GraphNode and 'to_slot' slot of 'to' GraphNode is attempted to be removed.
			</description>
		</signal>
		<signal name="duplicate_nodes_request">
			<description>
				Signal sent when a GraphNode is attempted to be duplicated in the GraphEdit.
			</description>
		</signal>
		<signal name="node_selected">
			<argument index="0" name="node" type="Node">
			</argument>
			<description>
				Emitted when a GraphNode is selected.
			</description>
		</signal>
		<signal name="popup_request">
			<argument index="0" name="position" type="Vector2">
			</argument>
			<description>
				Signal sent when a popup is requested. Happens on right-clicking in the GraphEdit. 'p_position' is the position of the mouse pointer when the signal is sent.
			</description>
		</signal>
		<signal name="scroll_offset_changed">
			<argument index="0" name="ofs" type="Vector2">
			</argument>
			<description>
			</description>
		</signal>
	</signals>
	<constants>
	</constants>
	<theme_items>
		<theme_item name="activity" type="Color">
		</theme_item>
		<theme_item name="bezier_len_neg" type="int">
		</theme_item>
		<theme_item name="bezier_len_pos" type="int">
		</theme_item>
		<theme_item name="bg" type="StyleBox">
		</theme_item>
		<theme_item name="grid_major" type="Color">
		</theme_item>
		<theme_item name="grid_minor" type="Color">
		</theme_item>
		<theme_item name="minus" type="Texture">
		</theme_item>
		<theme_item name="more" type="Texture">
		</theme_item>
		<theme_item name="port_grab_distance_horizontal" type="int">
		</theme_item>
		<theme_item name="port_grab_distance_vertical" type="int">
		</theme_item>
		<theme_item name="reset" type="Texture">
		</theme_item>
		<theme_item name="snap" type="Texture">
		</theme_item>
	</theme_items>
</class>
