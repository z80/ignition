<?xml version="1.0" encoding="UTF-8" ?>
<class name="PacketPeerUDP" inherits="PacketPeer" version="3.2">
	<brief_description>
		UDP packet peer.
	</brief_description>
	<description>
		UDP packet peer. Can be used to send raw UDP packets as well as [Variant]s.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="close">
			<return type="void">
			</return>
			<description>
				Closes the UDP socket the [PacketPeerUDP] is currently listening on.
			</description>
		</method>
		<method name="get_packet_ip" qualifiers="const">
			<return type="String">
			</return>
			<description>
				Returns the IP of the remote peer that sent the last packet(that was received with [method PacketPeer.get_packet] or [method PacketPeer.get_var]).
			</description>
		</method>
		<method name="get_packet_port" qualifiers="const">
			<return type="int">
			</return>
			<description>
				Returns the port of the remote peer that sent the last packet(that was received with [method PacketPeer.get_packet] or [method PacketPeer.get_var]).
			</description>
		</method>
		<method name="is_listening" qualifiers="const">
			<return type="bool">
			</return>
			<description>
				Returns whether this [PacketPeerUDP] is listening.
			</description>
		</method>
		<method name="join_multicast_group">
			<return type="int" enum="Error">
			</return>
			<argument index="0" name="multicast_address" type="String">
			</argument>
			<argument index="1" name="interface_name" type="String">
			</argument>
			<description>
				Joins the multicast group specified by [code]multicast_address[/code] using the interface identified by [code]interface_name[/code].
				You can join the same multicast group with multiple interfaces. Use [method IP.get_local_interfaces] to know which are available.
				Note: Some Android devices might require the [code]CHANGE_WIFI_MULTICAST_STATE[/code] permission for multicast to work.
			</description>
		</method>
		<method name="leave_multicast_group">
			<return type="int" enum="Error">
			</return>
			<argument index="0" name="multicast_address" type="String">
			</argument>
			<argument index="1" name="interface_name" type="String">
			</argument>
			<description>
				Removes the interface identified by [code]interface_name[/code] from the multicast group specified by [code]multicast_address[/code].
			</description>
		</method>
		<method name="listen">
			<return type="int" enum="Error">
			</return>
			<argument index="0" name="port" type="int">
			</argument>
			<argument index="1" name="bind_address" type="String" default="&quot;*&quot;">
			</argument>
			<argument index="2" name="recv_buf_size" type="int" default="65536">
			</argument>
			<description>
				Makes this [PacketPeerUDP] listen on the [code]port[/code] binding to [code]bind_address[/code] with a buffer size [code]recv_buf_size[/code].
				If [code]bind_address[/code] is set to [code]"*"[/code] (default), the peer will listen on all available addresses (both IPv4 and IPv6).
				If [code]bind_address[/code] is set to [code]"0.0.0.0"[/code] (for IPv4) or [code]"::"[/code] (for IPv6), the peer will listen on all available addresses matching that IP type.
				If [code]bind_address[/code] is set to any valid address (e.g. [code]"192.168.1.101"[/code], [code]"::1"[/code], etc), the peer will only listen on the interface with that addresses (or fail if no interface with the given address exists).
			</description>
		</method>
		<method name="set_broadcast_enabled">
			<return type="void">
			</return>
			<argument index="0" name="enabled" type="bool">
			</argument>
			<description>
				Enable or disable sending of broadcast packets (e.g. [code]set_dest_address("255.255.255.255", 4343)[/code]. This option is disabled by default.
				Note: Some Android devices might require the [code]CHANGE_WIFI_MULTICAST_STATE[/code] permission and this option to be enabled to receive broadcast packets too.
			</description>
		</method>
		<method name="set_dest_address">
			<return type="int" enum="Error">
			</return>
			<argument index="0" name="host" type="String">
			</argument>
			<argument index="1" name="port" type="int">
			</argument>
			<description>
				Sets the destination address and port for sending packets and variables. A hostname will be resolved using DNS if needed.
				Note: [method set_broadcast_enabled] must be enabled before sending packets to a broadcast address (e.g. [code]255.255.255.255[/code]).
			</description>
		</method>
		<method name="wait">
			<return type="int" enum="Error">
			</return>
			<description>
				Waits for a packet to arrive on the listening port. See [method listen].
			</description>
		</method>
	</methods>
	<constants>
	</constants>
</class>
