<?xml version="1.0" encoding="UTF-8" ?>
<class name="Button" inherits="BaseButton" version="3.2">
	<brief_description>
		Standard themed Button.
	</brief_description>
	<description>
		Button is the standard themed button. It can contain text and an icon, and will display them according to the current [Theme].
	</description>
	<tutorials>
	</tutorials>
	<methods>
	</methods>
	<members>
		<member name="align" type="int" setter="set_text_align" getter="get_text_align" enum="Button.TextAlign" default="1">
			Text alignment policy for the button's text, use one of the [enum TextAlign] constants.
		</member>
		<member name="clip_text" type="bool" setter="set_clip_text" getter="get_clip_text" default="false">
			When this property is enabled, text that is too large to fit the button is clipped, when disabled the Button will always be wide enough to hold the text.
		</member>
		<member name="expand_icon" type="bool" setter="set_expand_icon" getter="is_expand_icon" default="false">
			When enabled, the button's icon will expand/shrink to fit the button's size while keeping its aspect.
		</member>
		<member name="flat" type="bool" setter="set_flat" getter="is_flat" default="false">
			Flat buttons don't display decoration.
		</member>
		<member name="icon" type="Texture" setter="set_button_icon" getter="get_button_icon">
			Button's icon, if text is present the icon will be placed before the text.
		</member>
		<member name="text" type="String" setter="set_text" getter="get_text" default="&quot;&quot;">
			The button's text that will be displayed inside the button's area.
		</member>
	</members>
	<constants>
		<constant name="ALIGN_LEFT" value="0" enum="TextAlign">
			Align the text to the left.
		</constant>
		<constant name="ALIGN_CENTER" value="1" enum="TextAlign">
			Align the text to the center.
		</constant>
		<constant name="ALIGN_RIGHT" value="2" enum="TextAlign">
			Align the text to the right.
		</constant>
	</constants>
	<theme_items>
		<theme_item name="disabled" type="StyleBox">
			[StyleBox] used when the [Button] is disabled.
		</theme_item>
		<theme_item name="focus" type="StyleBox">
			[StyleBox] used when the [Button] is focused. It is displayed over the current [StyleBox], so using [StyleBoxEmpty] will just disable the focus visual effect.
		</theme_item>
		<theme_item name="font" type="Font">
			[Font] of the [Button]'s text.
		</theme_item>
		<theme_item name="font_color" type="Color" default="Color( 0.88, 0.88, 0.88, 1 )">
			Default text [Color] of the [Button].
		</theme_item>
		<theme_item name="font_color_disabled" type="Color" default="Color( 0.9, 0.9, 0.9, 0.2 )">
			Text [Color] used when the [Button] is disabled.
		</theme_item>
		<theme_item name="font_color_hover" type="Color" default="Color( 0.94, 0.94, 0.94, 1 )">
			Text [Color] used when the [Button] is being hovered.
		</theme_item>
		<theme_item name="font_color_pressed" type="Color" default="Color( 1, 1, 1, 1 )">
			Text [Color] used when the [Button] is being pressed.
		</theme_item>
		<theme_item name="hover" type="StyleBox">
			[StyleBox] used when the [Button] is being hovered.
		</theme_item>
		<theme_item name="hseparation" type="int" default="2">
			The horizontal space between [Button]'s icon and text.
		</theme_item>
		<theme_item name="normal" type="StyleBox">
			Default [StyleBox] for the [Button].
		</theme_item>
		<theme_item name="pressed" type="StyleBox">
			[StyleBox] used when the [Button] is being pressed.
		</theme_item>
	</theme_items>
</class>
