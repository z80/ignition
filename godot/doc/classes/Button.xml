<?xml version="1.0" encoding="UTF-8" ?>
<class name="Button" inherits="BaseButton" category="Core" version="3.1.2">
	<brief_description>
		Standard themed Button.
	</brief_description>
	<description>
		Button is the standard themed button. It can contain text and an icon, and will display them according to the current [Theme].
	</description>
	<tutorials>
	</tutorials>
	<methods>
	</methods>
	<members>
		<member name="align" type="int" setter="set_text_align" getter="get_text_align" enum="Button.TextAlign">
			Text alignment policy for the button's text, use one of the ALIGN_* constants.
		</member>
		<member name="clip_text" type="bool" setter="set_clip_text" getter="get_clip_text">
			When this property is enabled, text that is too large to fit the button is clipped, when disabled the Button will always be wide enough to hold the text. This property is disabled by default.
		</member>
		<member name="flat" type="bool" setter="set_flat" getter="is_flat">
			Flat buttons don't display decoration.
		</member>
		<member name="icon" type="Texture" setter="set_button_icon" getter="get_button_icon">
			Button's icon, if text is present the icon will be placed before the text.
		</member>
		<member name="text" type="String" setter="set_text" getter="get_text">
			The button's text that will be displayed inside the button's area.
		</member>
	</members>
	<constants>
		<constant name="ALIGN_LEFT" value="0" enum="TextAlign">
			Align the text to the left.
		</constant>
		<constant name="ALIGN_CENTER" value="1" enum="TextAlign">
			Align the text to the center.
		</constant>
		<constant name="ALIGN_RIGHT" value="2" enum="TextAlign">
			Align the text to the right.
		</constant>
	</constants>
	<theme_items>
		<theme_item name="disabled" type="StyleBox">
		</theme_item>
		<theme_item name="focus" type="StyleBox">
		</theme_item>
		<theme_item name="font" type="Font">
		</theme_item>
		<theme_item name="font_color" type="Color">
		</theme_item>
		<theme_item name="font_color_disabled" type="Color">
		</theme_item>
		<theme_item name="font_color_hover" type="Color">
		</theme_item>
		<theme_item name="font_color_pressed" type="Color">
		</theme_item>
		<theme_item name="hover" type="StyleBox">
		</theme_item>
		<theme_item name="hseparation" type="int">
		</theme_item>
		<theme_item name="normal" type="StyleBox">
		</theme_item>
		<theme_item name="pressed" type="StyleBox">
		</theme_item>
	</theme_items>
</class>
