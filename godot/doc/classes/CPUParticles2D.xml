<?xml version="1.0" encoding="UTF-8" ?>
<class name="CPUParticles2D" inherits="Node2D" category="Core" version="3.1.2">
	<brief_description>
		CPU-based 2D particle emitter.
	</brief_description>
	<description>
		CPU-based 2D particle node used to create a variety of particle systems and effects.
		See also [Particles2D], which provides the same functionality with hardware acceleration, but may not run on older devices.
	</description>
	<tutorials>
		<link>https://docs.godotengine.org/en/latest/tutorials/2d/particle_systems_2d.html</link>
	</tutorials>
	<methods>
		<method name="convert_from_particles">
			<return type="void">
			</return>
			<argument index="0" name="particles" type="Node">
			</argument>
			<description>
				Sets this node's properties to match a given [Particles2D] node with an assigned [ParticlesMaterial].
			</description>
		</method>
		<method name="restart">
			<return type="void">
			</return>
			<description>
				Restarts the particle emitter.
			</description>
		</method>
	</methods>
	<members>
		<member name="amount" type="int" setter="set_amount" getter="get_amount">
			Number of particles emitted in one emission cycle.
		</member>
		<member name="angle" type="float" setter="set_param" getter="get_param">
			Initial rotation applied to each particle, in degrees.
		</member>
		<member name="angle_curve" type="Curve" setter="set_param_curve" getter="get_param_curve">
			Each particle's rotation will be animated along this [Curve].
		</member>
		<member name="angle_random" type="float" setter="set_param_randomness" getter="get_param_randomness">
			Rotation randomness ratio. Default value: [code]0[/code].
		</member>
		<member name="angular_velocity" type="float" setter="set_param" getter="get_param">
			Initial angular velocity applied to each particle. Sets the speed of rotation of the particle.
		</member>
		<member name="angular_velocity_curve" type="Curve" setter="set_param_curve" getter="get_param_curve">
			Each particle's angular velocity will vary along this [Curve].
		</member>
		<member name="angular_velocity_random" type="float" setter="set_param_randomness" getter="get_param_randomness">
			Angular velocity randomness ratio. Default value: [code]0[/code].
		</member>
		<member name="anim_offset" type="float" setter="set_param" getter="get_param">
			Particle animation offset.
		</member>
		<member name="anim_offset_curve" type="Curve" setter="set_param_curve" getter="get_param_curve">
			Each particle's animation offset will vary along this [Curve].
		</member>
		<member name="anim_offset_random" type="float" setter="set_param_randomness" getter="get_param_randomness">
			Animation offset randomness ratio. Default value: [code]0[/code].
		</member>
		<member name="anim_speed" type="float" setter="set_param" getter="get_param">
			Particle animation speed.
		</member>
		<member name="anim_speed_curve" type="Curve" setter="set_param_curve" getter="get_param_curve">
			Each particle's animation speed will vary along this [Curve].
		</member>
		<member name="anim_speed_random" type="float" setter="set_param_randomness" getter="get_param_randomness">
			Animation speed randomness ratio. Default value: [code]0[/code].
		</member>
		<member name="color" type="Color" setter="set_color" getter="get_color">
			Each particle's initial color. If [member texture] is defined, it will be multiplied by this color.
		</member>
		<member name="color_ramp" type="Gradient" setter="set_color_ramp" getter="get_color_ramp">
			Each particle's color will vary along this [Gradient].
		</member>
		<member name="damping" type="float" setter="set_param" getter="get_param">
			The rate at which particles lose velocity.
		</member>
		<member name="damping_curve" type="Curve" setter="set_param_curve" getter="get_param_curve">
			Damping will vary along this [Curve].
		</member>
		<member name="damping_random" type="float" setter="set_param_randomness" getter="get_param_randomness">
			Damping randomness ratio. Default value: [code]0[/code].
		</member>
		<member name="draw_order" type="int" setter="set_draw_order" getter="get_draw_order" enum="CPUParticles2D.DrawOrder">
			Particle draw order. Uses [enum DrawOrder] values. Default value: [constant DRAW_ORDER_INDEX].
		</member>
		<member name="emission_colors" type="PoolColorArray" setter="set_emission_colors" getter="get_emission_colors">
		</member>
		<member name="emission_normals" type="PoolVector2Array" setter="set_emission_normals" getter="get_emission_normals">
		</member>
		<member name="emission_points" type="PoolVector2Array" setter="set_emission_points" getter="get_emission_points">
		</member>
		<member name="emission_rect_extents" type="Vector2" setter="set_emission_rect_extents" getter="get_emission_rect_extents">
			The rectangle's extents if [member emission_shape] is set to [constant EMISSION_SHAPE_RECTANGLE].
		</member>
		<member name="emission_shape" type="int" setter="set_emission_shape" getter="get_emission_shape" enum="CPUParticles2D.EmissionShape">
			Particles will be emitted inside this region. Use [enum EmissionShape] for values. Default value: [constant EMISSION_SHAPE_POINT].
		</member>
		<member name="emission_sphere_radius" type="float" setter="set_emission_sphere_radius" getter="get_emission_sphere_radius">
			The circle's radius if [member emission_shape] is set to [constant EMISSION_SHAPE_CIRCLE].
		</member>
		<member name="emitting" type="bool" setter="set_emitting" getter="is_emitting">
			If [code]true[/code], particles are being emitted. Default value: [code]true[/code].
		</member>
		<member name="explosiveness" type="float" setter="set_explosiveness_ratio" getter="get_explosiveness_ratio">
			How rapidly particles in an emission cycle are emitted. If greater than [code]0[/code], there will be a gap in emissions before the next cycle begins. Default value: [code]0[/code].
		</member>
		<member name="fixed_fps" type="int" setter="set_fixed_fps" getter="get_fixed_fps">
			The particle system's frame rate is fixed to a value. For instance, changing the value to 2 will make the particles render at 2 frames per second. Note this does not slow down the simulation of the particle system itself.
		</member>
		<member name="flag_align_y" type="bool" setter="set_particle_flag" getter="get_particle_flag">
			Align y-axis of particle with the direction of its velocity.
		</member>
		<member name="flatness" type="float" setter="set_flatness" getter="get_flatness">
		</member>
		<member name="fract_delta" type="bool" setter="set_fractional_delta" getter="get_fractional_delta">
			If [code]true[/code], results in fractional delta calculation which has a smoother particles display effect. Default value: [code]true[/code]
		</member>
		<member name="gravity" type="Vector2" setter="set_gravity" getter="get_gravity">
			Gravity applied to every particle. Default value: [code](0, 98)[/code].
		</member>
		<member name="hue_variation" type="float" setter="set_param" getter="get_param">
			Initial hue variation applied to each particle.
		</member>
		<member name="hue_variation_curve" type="Curve" setter="set_param_curve" getter="get_param_curve">
			Each particle's hue will vary along this [Curve].
		</member>
		<member name="hue_variation_random" type="float" setter="set_param_randomness" getter="get_param_randomness">
			Hue variation randomness ratio. Default value: [code]0[/code].
		</member>
		<member name="initial_velocity" type="float" setter="set_param" getter="get_param">
			Initial velocity magnitude for each particle. Direction comes from [member spread] and the node's orientation.
		</member>
		<member name="initial_velocity_random" type="float" setter="set_param_randomness" getter="get_param_randomness">
			Initial velocity randomness ratio. Default value: [code]0[/code].
		</member>
		<member name="lifetime" type="float" setter="set_lifetime" getter="get_lifetime">
			Amount of time each particle will exist. Default value: [code]1[/code].
		</member>
		<member name="linear_accel" type="float" setter="set_param" getter="get_param">
			Linear acceleration applied to each particle in the direction of motion.
		</member>
		<member name="linear_accel_curve" type="Curve" setter="set_param_curve" getter="get_param_curve">
			Each particle's linear acceleration will vary along this [Curve].
		</member>
		<member name="linear_accel_random" type="float" setter="set_param_randomness" getter="get_param_randomness">
			Linear acceleration randomness ratio. Default value: [code]0[/code].
		</member>
		<member name="local_coords" type="bool" setter="set_use_local_coordinates" getter="get_use_local_coordinates">
			If [code]true[/code], particles use the parent node's coordinate space. If [code]false[/code], they use global coordinates. Default value: [code]true[/code].
		</member>
		<member name="normalmap" type="Texture" setter="set_normalmap" getter="get_normalmap">
			Normal map to be used for the [member texture] property.
		</member>
		<member name="one_shot" type="bool" setter="set_one_shot" getter="get_one_shot">
			If [code]true[/code], only one emission cycle occurs. If set [code]true[/code] during a cycle, emission will stop at the cycle's end. Default value: [code]false[/code].
		</member>
		<member name="preprocess" type="float" setter="set_pre_process_time" getter="get_pre_process_time">
			Particle system starts as if it had already run for this many seconds.
		</member>
		<member name="radial_accel" type="float" setter="set_param" getter="get_param">
			Radial acceleration applied to each particle. Makes particle accelerate away from origin.
		</member>
		<member name="radial_accel_curve" type="Curve" setter="set_param_curve" getter="get_param_curve">
			Each particle's radial acceleration will vary along this [Curve].
		</member>
		<member name="radial_accel_random" type="float" setter="set_param_randomness" getter="get_param_randomness">
			Radial acceleration randomness ratio. Default value: [code]0[/code].
		</member>
		<member name="randomness" type="float" setter="set_randomness_ratio" getter="get_randomness_ratio">
			Emission lifetime randomness ratio. Default value: [code]0[/code].
		</member>
		<member name="scale_amount" type="float" setter="set_param" getter="get_param">
			Initial scale applied to each particle.
		</member>
		<member name="scale_amount_curve" type="Curve" setter="set_param_curve" getter="get_param_curve">
			Each particle's scale will vary along this [Curve].
		</member>
		<member name="scale_amount_random" type="float" setter="set_param_randomness" getter="get_param_randomness">
			Scale randomness ratio. Default value: [code]0[/code].
		</member>
		<member name="speed_scale" type="float" setter="set_speed_scale" getter="get_speed_scale">
			Particle system's running speed scaling ratio. Default value: [code]1[/code]. A value of [code]0[/code] can be used to pause the particles.
		</member>
		<member name="spread" type="float" setter="set_spread" getter="get_spread">
			Each particle's initial direction range from [code]+spread[/code] to [code]-spread[/code] degrees. Default value: [code]45[/code].
		</member>
		<member name="tangential_accel" type="float" setter="set_param" getter="get_param">
			Tangential acceleration applied to each particle. Tangential acceleration is perpendicular to the particle's velocity giving the particles a swirling motion.
		</member>
		<member name="tangential_accel_curve" type="Curve" setter="set_param_curve" getter="get_param_curve">
			Each particle's tangential acceleration will vary along this [Curve].
		</member>
		<member name="tangential_accel_random" type="float" setter="set_param_randomness" getter="get_param_randomness">
			Tangential acceleration randomness ratio. Default value: [code]0[/code].
		</member>
		<member name="texture" type="Texture" setter="set_texture" getter="get_texture">
			Particle texture. If [code]null[/code] particles will be squares.
		</member>
	</members>
	<constants>
		<constant name="DRAW_ORDER_INDEX" value="0" enum="DrawOrder">
			Particles are drawn in the order emitted.
		</constant>
		<constant name="DRAW_ORDER_LIFETIME" value="1" enum="DrawOrder">
			Particles are drawn in order of remaining lifetime.
		</constant>
		<constant name="PARAM_INITIAL_LINEAR_VELOCITY" value="0" enum="Parameter">
			Use with [method set_param], [method set_param_randomness], and [method set_param_texture] to set initial velocity properties.
		</constant>
		<constant name="PARAM_ANGULAR_VELOCITY" value="1" enum="Parameter">
			Use with [method set_param], [method set_param_randomness], and [method set_param_texture] to set angular velocity properties.
		</constant>
		<constant name="PARAM_ORBIT_VELOCITY" value="2" enum="Parameter">
			Use with [method set_param], [method set_param_randomness], and [method set_param_texture] to set orbital velocity properties.
		</constant>
		<constant name="PARAM_LINEAR_ACCEL" value="3" enum="Parameter">
			Use with [method set_param], [method set_param_randomness], and [method set_param_texture] to set linear acceleration properties.
		</constant>
		<constant name="PARAM_RADIAL_ACCEL" value="4" enum="Parameter">
			Use with [method set_param], [method set_param_randomness], and [method set_param_texture] to set radial acceleration properties.
		</constant>
		<constant name="PARAM_TANGENTIAL_ACCEL" value="5" enum="Parameter">
			Use with [method set_param], [method set_param_randomness], and [method set_param_texture] to set tangential acceleration properties.
		</constant>
		<constant name="PARAM_DAMPING" value="6" enum="Parameter">
			Use with [method set_param], [method set_param_randomness], and [method set_param_texture] to set damping properties.
		</constant>
		<constant name="PARAM_ANGLE" value="7" enum="Parameter">
			Use with [method set_param], [method set_param_randomness], and [method set_param_texture] to set angle properties.
		</constant>
		<constant name="PARAM_SCALE" value="8" enum="Parameter">
			Use with [method set_param], [method set_param_randomness], and [method set_param_texture] to set scale properties.
		</constant>
		<constant name="PARAM_HUE_VARIATION" value="9" enum="Parameter">
			Use with [method set_param], [method set_param_randomness], and [method set_param_texture] to set hue variation properties.
		</constant>
		<constant name="PARAM_ANIM_SPEED" value="10" enum="Parameter">
			Use with [method set_param], [method set_param_randomness], and [method set_param_texture] to set animation speed properties.
		</constant>
		<constant name="PARAM_ANIM_OFFSET" value="11" enum="Parameter">
			Use with [method set_param], [method set_param_randomness], and [method set_param_texture] to set animation offset properties.
		</constant>
		<constant name="PARAM_MAX" value="12" enum="Parameter">
			Represents the size of the [enum Parameter] enum.
		</constant>
		<constant name="FLAG_ALIGN_Y_TO_VELOCITY" value="0" enum="Flags">
			Use with [method set_flag] to set [member flag_align_y].
		</constant>
		<constant name="FLAG_MAX" value="1" enum="Flags">
		</constant>
		<constant name="EMISSION_SHAPE_POINT" value="0" enum="EmissionShape">
			All particles will be emitted from a single point.
		</constant>
		<constant name="EMISSION_SHAPE_CIRCLE" value="1" enum="EmissionShape">
			Particles will be emitted on the perimeter of a circle.
		</constant>
		<constant name="EMISSION_SHAPE_RECTANGLE" value="2" enum="EmissionShape">
			Particles will be emitted in the area of a rectangle.
		</constant>
		<constant name="EMISSION_SHAPE_POINTS" value="3" enum="EmissionShape">
			Particles will be emitted at a position chosen randomly among [member emission_points]. Particle color will be modulated by [member emission_colors].
		</constant>
		<constant name="EMISSION_SHAPE_DIRECTED_POINTS" value="4" enum="EmissionShape">
			Particles will be emitted at a position chosen randomly among [member emission_points]. Particle velocity and rotation will be set based on [member emission_normals]. Particle color will be modulated by [member emission_colors].
		</constant>
	</constants>
</class>
