<?xml version="1.0" encoding="UTF-8" ?>
<class name="Resource" inherits="Reference" category="Core" version="3.1.1">
	<brief_description>
		Base class for all resources.
	</brief_description>
	<description>
		Resource is the base class for all resource types, serving primarily as data containers. They are reference counted and freed when no longer in use. They are also loaded only once from disk, and further attempts to load the resource will return the same reference (all this in contrast to a [Node], which is not reference counted and can be instanced from disk as many times as desired). Resources can be saved externally on disk or bundled into another object, such as a [Node] or another resource.
	</description>
	<tutorials>
		<link>https://docs.godotengine.org/en/stable/getting_started/step_by_step/resources.html</link>
	</tutorials>
	<methods>
		<method name="_setup_local_to_scene" qualifiers="virtual">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="duplicate" qualifiers="const">
			<return type="Resource">
			</return>
			<argument index="0" name="subresources" type="bool" default="false">
			</argument>
			<description>
				Duplicates the resource, returning a new resource. By default, sub-resources are shared between resource copies for efficiency, this can be changed by passing [code]true[/code] to the [code]subresources[/code] argument.
			</description>
		</method>
		<method name="get_local_scene" qualifiers="const">
			<return type="Node">
			</return>
			<description>
			</description>
		</method>
		<method name="get_rid" qualifiers="const">
			<return type="RID">
			</return>
			<description>
				Returns the RID of the resource (or an empty RID). Many resources (such as [Texture], [Mesh], etc) are high level abstractions of resources stored in a server, so this function will return the original RID.
			</description>
		</method>
		<method name="setup_local_to_scene">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="take_over_path">
			<return type="void">
			</return>
			<argument index="0" name="path" type="String">
			</argument>
			<description>
				Sets the path of the resource. Differs from [code]set_path()[/code], if another [code]Resource[/code] exists with "path" it over-takes it, instead of failing.
			</description>
		</method>
	</methods>
	<members>
		<member name="resource_local_to_scene" type="bool" setter="set_local_to_scene" getter="is_local_to_scene">
		</member>
		<member name="resource_name" type="String" setter="set_name" getter="get_name">
			The name of the resource. This is an optional identifier.
		</member>
		<member name="resource_path" type="String" setter="set_path" getter="get_path">
			The path to the resource. In case it has its own file, it will return its filepath. If it's tied to the scene, it will return the scene's path, followed by the resource's index.
		</member>
	</members>
	<signals>
		<signal name="changed">
			<description>
			</description>
		</signal>
	</signals>
	<constants>
	</constants>
</class>
