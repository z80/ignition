<?xml version="1.0" encoding="UTF-8" ?>
<class name="Particles" inherits="GeometryInstance" version="3.2">
	<brief_description>
		3D particle emitter.
	</brief_description>
	<description>
		3D particle node used to create a variety of particle systems and effects. [Particles] features an emitter that generates some number of particles at a given rate.
		Use the [code]process_material[/code] property to add a [ParticlesMaterial] to configure particle appearance and behavior. Alternatively, you can add a [ShaderMaterial] which will be applied to all particles.
	</description>
	<tutorials>
		<link>https://docs.godotengine.org/en/latest/tutorials/3d/vertex_animation/controlling_thousands_of_fish.html</link>
	</tutorials>
	<methods>
		<method name="capture_aabb" qualifiers="const">
			<return type="AABB">
			</return>
			<description>
				Returns the axis-aligned bounding box that contains all the particles that are active in the current frame.
			</description>
		</method>
		<method name="get_draw_pass_mesh" qualifiers="const">
			<return type="Mesh">
			</return>
			<argument index="0" name="pass" type="int">
			</argument>
			<description>
				Returns the [Mesh] that is drawn at index [code]pass[/code].
			</description>
		</method>
		<method name="restart">
			<return type="void">
			</return>
			<description>
				Restarts the particle emission, clearing existing particles.
			</description>
		</method>
		<method name="set_draw_pass_mesh">
			<return type="void">
			</return>
			<argument index="0" name="pass" type="int">
			</argument>
			<argument index="1" name="mesh" type="Mesh">
			</argument>
			<description>
				Sets the [Mesh] that is drawn at index [code]pass[/code].
			</description>
		</method>
	</methods>
	<members>
		<member name="amount" type="int" setter="set_amount" getter="get_amount" default="8">
			Number of particles to emit.
		</member>
		<member name="draw_order" type="int" setter="set_draw_order" getter="get_draw_order" enum="Particles.DrawOrder" default="0">
			Particle draw order. Uses [enum DrawOrder] values.
		</member>
		<member name="draw_pass_1" type="Mesh" setter="set_draw_pass_mesh" getter="get_draw_pass_mesh">
			[Mesh] that is drawn for the first draw pass.
		</member>
		<member name="draw_pass_2" type="Mesh" setter="set_draw_pass_mesh" getter="get_draw_pass_mesh">
			[Mesh] that is drawn for the second draw pass.
		</member>
		<member name="draw_pass_3" type="Mesh" setter="set_draw_pass_mesh" getter="get_draw_pass_mesh">
			[Mesh] that is drawn for the third draw pass.
		</member>
		<member name="draw_pass_4" type="Mesh" setter="set_draw_pass_mesh" getter="get_draw_pass_mesh">
			[Mesh] that is drawn for the fourth draw pass.
		</member>
		<member name="draw_passes" type="int" setter="set_draw_passes" getter="get_draw_passes" default="1">
			The number of draw passes when rendering particles.
		</member>
		<member name="emitting" type="bool" setter="set_emitting" getter="is_emitting" default="true">
			If [code]true[/code], particles are being emitted.
		</member>
		<member name="explosiveness" type="float" setter="set_explosiveness_ratio" getter="get_explosiveness_ratio" default="0.0">
			Time ratio between each emission. If [code]0[/code], particles are emitted continuously. If [code]1[/code], all particles are emitted simultaneously.
		</member>
		<member name="fixed_fps" type="int" setter="set_fixed_fps" getter="get_fixed_fps" default="0">
			The particle system's frame rate is fixed to a value. For instance, changing the value to 2 will make the particles render at 2 frames per second. Note this does not slow down the simulation of the particle system itself.
		</member>
		<member name="fract_delta" type="bool" setter="set_fractional_delta" getter="get_fractional_delta" default="true">
			If [code]true[/code], results in fractional delta calculation which has a smoother particles display effect.
		</member>
		<member name="lifetime" type="float" setter="set_lifetime" getter="get_lifetime" default="1.0">
			Amount of time each particle will exist.
		</member>
		<member name="local_coords" type="bool" setter="set_use_local_coordinates" getter="get_use_local_coordinates" default="true">
			If [code]true[/code], particles use the parent node's coordinate space. If [code]false[/code], they use global coordinates.
		</member>
		<member name="one_shot" type="bool" setter="set_one_shot" getter="get_one_shot" default="false">
			If [code]true[/code], only [code]amount[/code] particles will be emitted.
		</member>
		<member name="preprocess" type="float" setter="set_pre_process_time" getter="get_pre_process_time" default="0.0">
			Amount of time to preprocess the particles before animation starts. Lets you start the animation some time after particles have started emitting.
		</member>
		<member name="process_material" type="Material" setter="set_process_material" getter="get_process_material">
			[Material] for processing particles. Can be a [ParticlesMaterial] or a [ShaderMaterial].
		</member>
		<member name="randomness" type="float" setter="set_randomness_ratio" getter="get_randomness_ratio" default="0.0">
			Emission randomness ratio.
		</member>
		<member name="speed_scale" type="float" setter="set_speed_scale" getter="get_speed_scale" default="1.0">
			Speed scaling ratio. A value of [code]0[/code] can be used to pause the particles.
		</member>
		<member name="visibility_aabb" type="AABB" setter="set_visibility_aabb" getter="get_visibility_aabb" default="AABB( -4, -4, -4, 8, 8, 8 )">
			The [AABB] that determines the area of the world part of which needs to be visible on screen for the particle system to be active.
			[b]Note:[/b] If the [ParticlesMaterial] in use is configured to cast shadows, you may want to enlarge this AABB to ensure the shadow is updated when particles are off-screen.
		</member>
	</members>
	<constants>
		<constant name="DRAW_ORDER_INDEX" value="0" enum="DrawOrder">
			Particles are drawn in the order emitted.
		</constant>
		<constant name="DRAW_ORDER_LIFETIME" value="1" enum="DrawOrder">
			Particles are drawn in order of remaining lifetime.
		</constant>
		<constant name="DRAW_ORDER_VIEW_DEPTH" value="2" enum="DrawOrder">
			Particles are drawn in order of depth.
		</constant>
		<constant name="MAX_DRAW_PASSES" value="4">
			Maximum number of draw passes supported.
		</constant>
	</constants>
</class>
