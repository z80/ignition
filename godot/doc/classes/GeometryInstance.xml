<?xml version="1.0" encoding="UTF-8" ?>
<class name="GeometryInstance" inherits="VisualInstance" category="Core" version="3.1.1">
	<brief_description>
		Base node for geometry based visual instances.
	</brief_description>
	<description>
		Base node for geometry based visual instances. Shares some common functionality like visibility and custom materials.
	</description>
	<tutorials>
	</tutorials>
	<methods>
	</methods>
	<members>
		<member name="cast_shadow" type="int" setter="set_cast_shadows_setting" getter="get_cast_shadows_setting" enum="GeometryInstance.ShadowCastingSetting">
			The selected shadow casting flag. See SHADOW_CASTING_SETTING_* constants for values.
		</member>
		<member name="extra_cull_margin" type="float" setter="set_extra_cull_margin" getter="get_extra_cull_margin">
			The extra distance added to the GeometryInstance's bounding box ([AABB]) to increase its cull box.
		</member>
		<member name="lod_max_distance" type="float" setter="set_lod_max_distance" getter="get_lod_max_distance">
			The GeometryInstance's max LOD distance.
		</member>
		<member name="lod_max_hysteresis" type="float" setter="set_lod_max_hysteresis" getter="get_lod_max_hysteresis">
			The GeometryInstance's max LOD margin.
		</member>
		<member name="lod_min_distance" type="float" setter="set_lod_min_distance" getter="get_lod_min_distance">
			The GeometryInstance's min LOD distance.
		</member>
		<member name="lod_min_hysteresis" type="float" setter="set_lod_min_hysteresis" getter="get_lod_min_hysteresis">
			The GeometryInstance's min LOD margin.
		</member>
		<member name="material_override" type="Material" setter="set_material_override" getter="get_material_override">
			The material override for the whole geometry.
			If there is a material in material_override, it will be used instead of any material set in any material slot of the mesh.
		</member>
		<member name="use_in_baked_light" type="bool" setter="set_flag" getter="get_flag">
			If [code]true[/code], this GeometryInstance will be used when baking lights using a [GIProbe] and/or any other form of baked lighting.
		</member>
	</members>
	<constants>
		<constant name="SHADOW_CASTING_SETTING_OFF" value="0" enum="ShadowCastingSetting">
			Will not cast any shadows.
		</constant>
		<constant name="SHADOW_CASTING_SETTING_ON" value="1" enum="ShadowCastingSetting">
			Will cast shadows from all visible faces in the GeometryInstance.
			Will take culling into account, so faces not being rendered will not be taken into account when shadow casting.
		</constant>
		<constant name="SHADOW_CASTING_SETTING_DOUBLE_SIDED" value="2" enum="ShadowCastingSetting">
			Will cast shadows from all visible faces in the GeometryInstance.
			Will not take culling into account, so all faces will be taken into account when shadow casting.
		</constant>
		<constant name="SHADOW_CASTING_SETTING_SHADOWS_ONLY" value="3" enum="ShadowCastingSetting">
			Will only show the shadows casted from this object.
			In other words: The actual mesh will not be visible, only the shadows casted from the mesh.
		</constant>
		<constant name="FLAG_USE_BAKED_LIGHT" value="0" enum="Flags">
			Will allow the GeometryInstance to be used when baking lights using a [GIProbe] and/or any other form of baked lighting.
			Added documentation for GeometryInstance and VisualInstance
		</constant>
		<constant name="FLAG_MAX" value="2" enum="Flags">
		</constant>
	</constants>
</class>
