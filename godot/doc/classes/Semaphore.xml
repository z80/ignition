<?xml version="1.0" encoding="UTF-8" ?>
<class name="Semaphore" inherits="Reference" category="Core" version="3.1.2">
	<brief_description>
		A synchronization Semaphore.
	</brief_description>
	<description>
		A synchronization Semaphore. Element used to synchronize multiple [Thread]s. Initialized to zero on creation. Be careful to avoid deadlocks. For a binary version, see [Mutex].
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="post">
			<return type="int" enum="Error">
			</return>
			<description>
				Lowers the [code]Semaphore[/code], allowing one more thread in. Returns [constant @GlobalScope.OK] on success, [constant @GlobalScope.ERR_BUSY] otherwise.
			</description>
		</method>
		<method name="wait">
			<return type="int" enum="Error">
			</return>
			<description>
				Tries to wait for the [code]Semaphore[/code], if its value is zero, blocks until non-zero. Returns [constant @GlobalScope.OK] on success, [constant @GlobalScope.ERR_BUSY] otherwise.
			</description>
		</method>
	</methods>
	<constants>
	</constants>
</class>
