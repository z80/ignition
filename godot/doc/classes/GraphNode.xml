<?xml version="1.0" encoding="UTF-8" ?>
<class name="GraphNode" inherits="Container" category="Core" version="3.1.2">
	<brief_description>
		A GraphNode is a container with several input and output slots allowing connections between GraphNodes. Slots can have different, incompatible types.
	</brief_description>
	<description>
		A GraphNode is a container defined by a title. It can have 1 or more input and output slots, which can be enabled (shown) or disabled (not shown) and have different (incompatible) types. Colors can also be assigned to slots. A tuple of input and output slots is defined for each GUI element included in the GraphNode. Input and output connections are left and right slots, but only enabled slots are counted as connections.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="clear_all_slots">
			<return type="void">
			</return>
			<description>
				Disable all input and output slots of the GraphNode.
			</description>
		</method>
		<method name="clear_slot">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Disable input and output slot whose index is 'idx'.
			</description>
		</method>
		<method name="get_connection_input_color">
			<return type="Color">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the color of the input connection 'idx'.
			</description>
		</method>
		<method name="get_connection_input_count">
			<return type="int">
			</return>
			<description>
				Returns the number of enabled input slots (connections) to the GraphNode.
			</description>
		</method>
		<method name="get_connection_input_position">
			<return type="Vector2">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the position of the input connection 'idx'.
			</description>
		</method>
		<method name="get_connection_input_type">
			<return type="int">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the type of the input connection 'idx'.
			</description>
		</method>
		<method name="get_connection_output_color">
			<return type="Color">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the color of the output connection 'idx'.
			</description>
		</method>
		<method name="get_connection_output_count">
			<return type="int">
			</return>
			<description>
				Returns the number of enabled output slots (connections) of the GraphNode.
			</description>
		</method>
		<method name="get_connection_output_position">
			<return type="Vector2">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the position of the output connection 'idx'.
			</description>
		</method>
		<method name="get_connection_output_type">
			<return type="int">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the type of the output connection 'idx'.
			</description>
		</method>
		<method name="get_slot_color_left" qualifiers="const">
			<return type="Color">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the color set to 'idx' left (input) slot.
			</description>
		</method>
		<method name="get_slot_color_right" qualifiers="const">
			<return type="Color">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the color set to 'idx' right (output) slot.
			</description>
		</method>
		<method name="get_slot_type_left" qualifiers="const">
			<return type="int">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the (integer) type of left (input) 'idx' slot.
			</description>
		</method>
		<method name="get_slot_type_right" qualifiers="const">
			<return type="int">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the (integer) type of right (output) 'idx' slot.
			</description>
		</method>
		<method name="is_slot_enabled_left" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns [code]true[/code] if left (input) slot 'idx' is enabled, [code]false[/code] otherwise.
			</description>
		</method>
		<method name="is_slot_enabled_right" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns [code]true[/code] if right (output) slot 'idx' is enabled, [code]false[/code] otherwise.
			</description>
		</method>
		<method name="set_slot">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="enable_left" type="bool">
			</argument>
			<argument index="2" name="type_left" type="int">
			</argument>
			<argument index="3" name="color_left" type="Color">
			</argument>
			<argument index="4" name="enable_right" type="bool">
			</argument>
			<argument index="5" name="type_right" type="int">
			</argument>
			<argument index="6" name="color_right" type="Color">
			</argument>
			<argument index="7" name="custom_left" type="Texture" default="null">
			</argument>
			<argument index="8" name="custom_right" type="Texture" default="null">
			</argument>
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="comment" type="bool" setter="set_comment" getter="is_comment">
		</member>
		<member name="offset" type="Vector2" setter="set_offset" getter="get_offset">
			The offset of the GraphNode, relative to the scroll offset of the [GraphEdit]. Note that you cannot use position directly, as [GraphEdit] is a [Container].
		</member>
		<member name="overlay" type="int" setter="set_overlay" getter="get_overlay" enum="GraphNode.Overlay">
		</member>
		<member name="resizable" type="bool" setter="set_resizable" getter="is_resizable">
		</member>
		<member name="selected" type="bool" setter="set_selected" getter="is_selected">
		</member>
		<member name="show_close" type="bool" setter="set_show_close_button" getter="is_close_button_visible">
		</member>
		<member name="title" type="String" setter="set_title" getter="get_title">
		</member>
	</members>
	<signals>
		<signal name="close_request">
			<description>
				Signal sent on closing the GraphNode.
			</description>
		</signal>
		<signal name="dragged">
			<argument index="0" name="from" type="Vector2">
			</argument>
			<argument index="1" name="to" type="Vector2">
			</argument>
			<description>
				Signal sent when the GraphNode is dragged.
			</description>
		</signal>
		<signal name="offset_changed">
			<description>
				Signal sent when the GraphNode is moved.
			</description>
		</signal>
		<signal name="raise_request">
			<description>
				Signal sent when the GraphNode is requested to be displayed over other ones. Happens on focusing (clicking into) the GraphNode.
			</description>
		</signal>
		<signal name="resize_request">
			<argument index="0" name="new_minsize" type="Vector2">
			</argument>
			<description>
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="OVERLAY_DISABLED" value="0" enum="Overlay">
		</constant>
		<constant name="OVERLAY_BREAKPOINT" value="1" enum="Overlay">
		</constant>
		<constant name="OVERLAY_POSITION" value="2" enum="Overlay">
		</constant>
	</constants>
	<theme_items>
		<theme_item name="breakpoint" type="StyleBox">
		</theme_item>
		<theme_item name="close" type="Texture">
		</theme_item>
		<theme_item name="close_color" type="Color">
		</theme_item>
		<theme_item name="close_offset" type="int">
		</theme_item>
		<theme_item name="comment" type="StyleBox">
		</theme_item>
		<theme_item name="commentfocus" type="StyleBox">
		</theme_item>
		<theme_item name="defaultfocus" type="StyleBox">
		</theme_item>
		<theme_item name="defaultframe" type="StyleBox">
		</theme_item>
		<theme_item name="frame" type="StyleBox">
		</theme_item>
		<theme_item name="port" type="Texture">
		</theme_item>
		<theme_item name="port_offset" type="int">
		</theme_item>
		<theme_item name="position" type="StyleBox">
		</theme_item>
		<theme_item name="resizer" type="Texture">
		</theme_item>
		<theme_item name="selectedframe" type="StyleBox">
		</theme_item>
		<theme_item name="separation" type="int">
		</theme_item>
		<theme_item name="title_color" type="Color">
		</theme_item>
		<theme_item name="title_font" type="Font">
		</theme_item>
		<theme_item name="title_offset" type="int">
		</theme_item>
	</theme_items>
</class>
