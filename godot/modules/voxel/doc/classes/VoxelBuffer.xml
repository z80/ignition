<?xml version="1.0" encoding="UTF-8" ?>
<class name="VoxelBuffer" inherits="Reference" version="3.2">
	<brief_description>
	</brief_description>
	<description>
		Dense voxels data storage. Works like a normal 3D grid. Organized in channels of configurable bit depth. Values can be interpreted either as unsigned integers or normalized floats. Arbitrary metadata can also be stored, at higher cost.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="clear">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="clear_voxel_metadata">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="clear_voxel_metadata_in_area">
			<return type="void">
			</return>
			<argument index="0" name="min_pos" type="Vector3">
			</argument>
			<argument index="1" name="max_pos" type="Vector3">
			</argument>
			<description>
			</description>
		</method>
		<method name="copy_channel_from">
			<return type="void">
			</return>
			<argument index="0" name="other" type="VoxelBuffer">
			</argument>
			<argument index="1" name="channel" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="copy_channel_from_area">
			<return type="void">
			</return>
			<argument index="0" name="other" type="VoxelBuffer">
			</argument>
			<argument index="1" name="src_min" type="Vector3">
			</argument>
			<argument index="2" name="src_max" type="Vector3">
			</argument>
			<argument index="3" name="dst_min" type="Vector3">
			</argument>
			<argument index="4" name="channel" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="copy_voxel_metadata_in_area">
			<return type="void">
			</return>
			<argument index="0" name="src_min_pos" type="VoxelBuffer">
			</argument>
			<argument index="1" name="src_max_pos" type="Vector3">
			</argument>
			<argument index="2" name="dst_min_pos" type="Vector3">
			</argument>
			<argument index="3" name="arg3" type="Vector3">
			</argument>
			<description>
			</description>
		</method>
		<method name="create">
			<return type="void">
			</return>
			<argument index="0" name="sx" type="int">
			</argument>
			<argument index="1" name="sy" type="int">
			</argument>
			<argument index="2" name="sz" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="downscale_to" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="dst" type="VoxelBuffer">
			</argument>
			<argument index="1" name="src_min" type="Vector3">
			</argument>
			<argument index="2" name="src_max" type="Vector3">
			</argument>
			<argument index="3" name="dst_min" type="Vector3">
			</argument>
			<description>
			</description>
		</method>
		<method name="fill">
			<return type="void">
			</return>
			<argument index="0" name="value" type="int">
			</argument>
			<argument index="1" name="channel" type="int" default="0">
			</argument>
			<description>
			</description>
		</method>
		<method name="fill_area">
			<return type="void">
			</return>
			<argument index="0" name="value" type="int">
			</argument>
			<argument index="1" name="min" type="Vector3">
			</argument>
			<argument index="2" name="max" type="Vector3">
			</argument>
			<argument index="3" name="channel" type="int" default="0">
			</argument>
			<description>
			</description>
		</method>
		<method name="fill_f">
			<return type="void">
			</return>
			<argument index="0" name="value" type="float">
			</argument>
			<argument index="1" name="channel" type="int" default="0">
			</argument>
			<description>
			</description>
		</method>
		<method name="for_each_voxel_metadata" qualifiers="const">
			<return type="void">
			</return>
			<argument index="0" name="callback" type="FuncRef">
			</argument>
			<description>
			</description>
		</method>
		<method name="for_each_voxel_metadata_in_area">
			<return type="void">
			</return>
			<argument index="0" name="callback" type="FuncRef">
			</argument>
			<argument index="1" name="min_pos" type="Vector3">
			</argument>
			<argument index="2" name="max_pos" type="Vector3">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_block_metadata" qualifiers="const">
			<return type="Variant">
			</return>
			<description>
			</description>
		</method>
		<method name="get_channel_compression" qualifiers="const">
			<return type="int" enum="VoxelBuffer.Compression">
			</return>
			<argument index="0" name="channel" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_channel_depth" qualifiers="const">
			<return type="int" enum="VoxelBuffer.Depth">
			</return>
			<argument index="0" name="channel" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_size" qualifiers="const">
			<return type="Vector3">
			</return>
			<description>
			</description>
		</method>
		<method name="get_size_x" qualifiers="const">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
		<method name="get_size_y" qualifiers="const">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
		<method name="get_size_z" qualifiers="const">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
		<method name="get_voxel" qualifiers="const">
			<return type="int">
			</return>
			<argument index="0" name="x" type="int">
			</argument>
			<argument index="1" name="y" type="int">
			</argument>
			<argument index="2" name="z" type="int">
			</argument>
			<argument index="3" name="channel" type="int" default="0">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_voxel_f" qualifiers="const">
			<return type="float">
			</return>
			<argument index="0" name="x" type="int">
			</argument>
			<argument index="1" name="y" type="int">
			</argument>
			<argument index="2" name="z" type="int">
			</argument>
			<argument index="3" name="channel" type="int" default="0">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_voxel_metadata" qualifiers="const">
			<return type="Variant">
			</return>
			<argument index="0" name="pos" type="Vector3">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_voxel_tool">
			<return type="VoxelTool">
			</return>
			<description>
			</description>
		</method>
		<method name="is_uniform" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="channel" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="optimize">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="set_block_metadata">
			<return type="void">
			</return>
			<argument index="0" name="meta" type="Variant">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_channel_depth">
			<return type="void">
			</return>
			<argument index="0" name="channel" type="int">
			</argument>
			<argument index="1" name="depth" type="int" enum="VoxelBuffer.Depth">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_voxel">
			<return type="void">
			</return>
			<argument index="0" name="value" type="int">
			</argument>
			<argument index="1" name="x" type="int">
			</argument>
			<argument index="2" name="y" type="int">
			</argument>
			<argument index="3" name="z" type="int">
			</argument>
			<argument index="4" name="channel" type="int" default="0">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_voxel_f">
			<return type="void">
			</return>
			<argument index="0" name="value" type="float">
			</argument>
			<argument index="1" name="x" type="int">
			</argument>
			<argument index="2" name="y" type="int">
			</argument>
			<argument index="3" name="z" type="int">
			</argument>
			<argument index="4" name="channel" type="int" default="0">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_voxel_metadata">
			<return type="void">
			</return>
			<argument index="0" name="pos" type="Vector3">
			</argument>
			<argument index="1" name="value" type="Variant">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_voxel_v">
			<return type="void">
			</return>
			<argument index="0" name="value" type="int">
			</argument>
			<argument index="1" name="pos" type="Vector3">
			</argument>
			<argument index="2" name="channel" type="int" default="0">
			</argument>
			<description>
			</description>
		</method>
	</methods>
	<constants>
		<constant name="CHANNEL_TYPE" value="0" enum="ChannelId">
		</constant>
		<constant name="CHANNEL_SDF" value="1" enum="ChannelId">
		</constant>
		<constant name="CHANNEL_DATA2" value="2" enum="ChannelId">
		</constant>
		<constant name="CHANNEL_DATA3" value="3" enum="ChannelId">
		</constant>
		<constant name="CHANNEL_DATA4" value="4" enum="ChannelId">
		</constant>
		<constant name="CHANNEL_DATA5" value="5" enum="ChannelId">
		</constant>
		<constant name="CHANNEL_DATA6" value="6" enum="ChannelId">
		</constant>
		<constant name="CHANNEL_DATA7" value="7" enum="ChannelId">
		</constant>
		<constant name="MAX_CHANNELS" value="8" enum="ChannelId">
		</constant>
		<constant name="DEPTH_8_BIT" value="0" enum="Depth">
		</constant>
		<constant name="DEPTH_16_BIT" value="1" enum="Depth">
		</constant>
		<constant name="DEPTH_32_BIT" value="2" enum="Depth">
		</constant>
		<constant name="DEPTH_64_BIT" value="3" enum="Depth">
		</constant>
		<constant name="DEPTH_COUNT" value="4" enum="Depth">
		</constant>
		<constant name="COMPRESSION_NONE" value="0" enum="Compression">
		</constant>
		<constant name="COMPRESSION_UNIFORM" value="1" enum="Compression">
		</constant>
		<constant name="COMPRESSION_COUNT" value="2" enum="Compression">
		</constant>
	</constants>
</class>
