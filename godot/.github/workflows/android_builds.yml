name: ðŸ¤– Android Builds
on: [push, pull_request]

# Global Cache Settings
env:
  GODOT_BASE_BRANCH: 3.2
  SCONS_CACHE_LIMIT: 4096

jobs:
  android-template:
    runs-on: "ubuntu-20.04"

    name: Template (target=release, tools=no)

    steps:
      - uses: actions/checkout@v2

      # Azure repositories are not reliable, we need to prevent azure giving us packages.
      - name: Make apt sources.list use the default Ubuntu repositories
        run: |
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update

      # Install all packages (except scons)
      - name: Configure dependencies
        run: |
         sudo apt-get install openjdk-8-jdk
         echo "::set-env name=JAVA_HOME::usr/lib/jvm/java-8-openjdk-amd64"

      - name: Install Android SDK and NDK
        run: |
          echo "::set-env name=PATH::/usr/lib/jvm/java-8-openjdk-amd64/jre/bin:${PATH}"
          java -version
          echo "::set-env name=ANDROID_HOME::$(pwd)/godot-dev/build-tools/android-sdk"
          echo "::set-env name=ANDROID_NDK_ROOT::$(pwd)/godot-dev/build-tools/android-ndk"
          misc/ci/android-tools-linux.sh
          source ~/.bashrc

      # Upload cache on completion and check it out now
      - name: Load .scons_cache directory
        id: android-template-cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

      # Use python 3.x release (works cross platform)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # You can test your matrix by printing the current Python version
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version

      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          scons -j2 verbose=yes warnings=all werror=yes platform=android target=release tools=no
