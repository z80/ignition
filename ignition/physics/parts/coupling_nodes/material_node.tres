[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode unshaded;

uniform vec4 color_a: source_color = vec4( 0.81, 0.81,  0.0, 0.4 );
uniform vec4 color_b: source_color = vec4( 0.36, 0.36, 0.36, 0.2 );

varying vec3 point3d;

vec4 compute_color( vec3 r )
{
	float f = r.x * r.y * r.z;
	vec4 color = (f > 0.0) ? color_a : color_b;
	return color;
}

void vertex()
{
	point3d = VERTEX;
}

void fragment()
{
	vec4 color = compute_color( point3d );
	ALBEDO = vec3( color.rgb );
	ALPHA  = color.a;
}



"

[resource]
shader = SubResource( 1 )
shader_param/color_a = Color( 0.81, 0.81, 0, 0.22 )
shader_param/color_b = Color( 0.36, 0.36, 0.36, 0.22 )
