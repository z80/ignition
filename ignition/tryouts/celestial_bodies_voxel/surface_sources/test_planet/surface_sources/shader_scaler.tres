[gd_resource type="Shader" format=2]

[resource]
code = "shader_type spatial;
//render_mode async_visible,blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;

uniform mat3 source_mat3;
uniform vec3 source_vec3;

uniform mat3 inv_scaled_source_mat3;
uniform vec3 inv_scaled_source_vec3;

uniform float plain_dist = 100.0;
uniform float log_scale  = 1.0;

const float EPS = 0.001;

void vertex()
{
	vec3 v = VERTEX;
	vec3 vert = vec3(v.x + 100.0, v.y, v.z);
	//vec3 vert = vec3(UV.x + 100.0, UV.y, UV2.x);
//	vert = source_mat3 * vert;
//	vert += source_vec3;
//
//	float len = length( vert );
//	float extra_dist = len - plain_dist;
//	if ( extra_dist > 0.0 )
//	{
//		float log_dist = log( 1.0 + extra_dist ) * log_scale;
//		float scaled_dist = plain_dist + log_dist;
//		vert = vert * (scaled_dist / len);
//	}
//
//	vert = inv_scaled_source_mat3 * vert;
//	vert += inv_scaled_source_vec3;
	
	VERTEX = vert;
}




//void fragment()
//{
//}
"
